services:
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: polysynergy_db
      POSTGRES_USER: polysynergy_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env.prod
    volumes:
      - ./db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - internal

  redis:
    image: redis:8
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.prod.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      - internal

  api_local:
    build:
      context: .
      dockerfile: ./api-local/Dockerfile
    ports:
      - "8090:8090"
    env_file:
      - ./api-local/.env
      - .env.prod
    volumes:
      - ./api-local:/app
      - ./nodes:/nodes
      - ./node_runner:/node_runner
      - ./nodes_agno:/nodes_agno
    networks:
      - internal
    environment:
      - PROJECT_DB=/sqlite_data/polysynergy.db
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
    depends_on:
      - db
      - redis

  router:
    build:
      context: ./router
    container_name: router-service
    ports:
      - "8080:8080"
    volumes:
      - ./router:/app
    env_file:
      - ./router/.env
    networks:
      - internal

  caddy:
    image: caddy:2
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - api_local
      - router
    networks:
      - internal

volumes:
  caddy_data:
  caddy_config:

networks:
  internal:
    driver: bridge
