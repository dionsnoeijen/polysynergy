services:
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: polysynergy_db
      POSTGRES_USER: polysynergy_user
      POSTGRES_PASSWORD: securepassword
    volumes:
      - ./db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - internal

  agno_session_db:
    image: postgres:14
    environment:
      POSTGRES_DB: agno_session_db
      POSTGRES_USER: agno_user
      POSTGRES_PASSWORD: agno_password
    volumes:
      - ./agno_session_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - internal

  redis:
    image: redis:8
    ports:
      - "6379:6379"
    networks:
      - internal

  api_local:
    build:
      context: .
      dockerfile: ./api-local/Dockerfile
    ports:
      - "8090:8090"
    env_file:
      - ./api-local/.env
    volumes:
      - ./api-local:/app
      - ./documentation:/documentation
      - ./nodes:/nodes
      - ./node_runner:/node_runner
      - ./nodes_agno:/nodes_agno
      - ./nodes_dev:/nodes_dev
    networks:
      - internal
    environment:
      - PROJECT_DB=/sqlite_data/polysynergy.db
      - RELOAD_DIRS=--reload-dir /app --reload-dir /nodes --reload-dir /node_runner --reload-dir /nodes_agno --reload-dir /nodes_dev
    depends_on:
      - db
      - redis

  portal:
    build:
      context: ./portal
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ./portal:/app
      - ./portal/node_modules:/app/node_modules
    environment:
      NODE_ENV: development
      PORT: 4000
      NEXT_PUBLIC_POLYSYNERGY_API_URL: "http://localhost:8000/api/v1"

  router:
    build:
      context: ./router
    container_name: router-service
    ports:
      - "8080:8080"
    volumes:
      - ./router:/app
    env_file:
      - ./router/.env
    networks:
      - internal

volumes:
  caddy_data:
  caddy_config:

networks:
  internal:
    driver: bridge
